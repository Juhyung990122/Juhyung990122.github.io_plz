{"componentChunkName":"component---src-templates-blog-post-js","path":"/Django/2020-07-11-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b9e100df-21ce-5f19-90bc-15eeaeacc109","excerpt":"🌟웹 서버 동작 원리 🎯서버의 기본 동작 웹 서버는 클라이언트가 특정위치에 있는 서버 저장소 내의 자원을 요청하면\n해당 요청을 받아서 그에 맞는 데이터를 제공(응답)하는 역할을 합니다. 🎯HTTP method HTTP method란 웹서버에서 실행할 자원 처리 방식을 뜻합니다.\n앞서 말했듯 클라이언트는 서버에게 자원을 요청합니다. \n이때 이 자원을 어떤식으로 처리할 것인지도 함께 명시하여 보내야하는데 이를 HTTP method로 표현합니다.\nHTTP method에는 대표적으로…","html":"<h2 id=\"웹-서버-동작-원리\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B2%84-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"웹 서버 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟웹 서버 동작 원리</h2>\n<h3 id=\"서버의-기본-동작\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EB%8F%99%EC%9E%91\" aria-label=\"서버의 기본 동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯서버의 기본 동작</h3>\n<p>웹 서버는 클라이언트가 <strong>특정위치</strong>에 있는 서버 저장소 내의 <strong>자원</strong>을 요청하면\n해당 요청을 받아서 그에 맞는 데이터를 제공(응답)하는 역할을 합니다.</p>\n<h3 id=\"http-method\" style=\"position:relative;\"><a href=\"#http-method\" aria-label=\"http method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯HTTP method</h3>\n<p>HTTP method란 웹서버에서 실행할 자원 처리 방식을 뜻합니다.\n앞서 말했듯 클라이언트는 서버에게 자원을 요청합니다.\n이때 이 자원을 어떤식으로 처리할 것인지도 함께 명시하여 보내야하는데 이를 HTTP method로 표현합니다.\nHTTP method에는 대표적으로 4가지 종류가 있으며 특징은 다음과 같습니다.</p>\n<ol>\n<li>GET : 요청된 자원을 검색하여 응답합니다.</li>\n<li>POST : 요청된 자원을 생성합니다. </li>\n<li>PUT : 요청된 자원을 수정합니다.</li>\n<li>DELETE : 요청된 자원을 삭제합니다.</li>\n</ol>\n<h4 id=\"get과-post의-공통점과-차이점\" style=\"position:relative;\"><a href=\"#get%EA%B3%BC-post%EC%9D%98-%EA%B3%B5%ED%86%B5%EC%A0%90%EA%B3%BC-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"get과 post의 공통점과 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>+)GET과 POST의 공통점과 차이점</h4>\n<p>GET과 POST는 서버에게 데이터를 전송하기 위해서 사용한다는 점이 같습니다.</p>\n<p>GET은 url에 변수로 데이터를 포함시켜 요청합니다.\nurl안에 데이터 정보가 포함되어 보안성이 낮아 보통 개인정보가 포함되지않는 상황에서 사용합니다.\n길이제한으로 인해 작은 데이터를 다룰때 사용합니다.</p>\n<p>POST는 body에 데이터를 포함시켜 요청합니다.\nurl에 변수로 데이터를 포함시키지 않으므로 GET에 비해 상대적으로 보안성이 높습니다.\n또한 앞서 말했던 길이제한의 문제가 없어 큰 데이터를 다룰 때 사용합니다.</p>\n<h4 id=\"post와-put의-공통점과-차이점\" style=\"position:relative;\"><a href=\"#post%EC%99%80-put%EC%9D%98-%EA%B3%B5%ED%86%B5%EC%A0%90%EA%B3%BC-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"post와 put의 공통점과 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>+)POST와 PUT의 공통점과 차이점</h4>\n<p>POST와 PUT 둘다 리소스를 생성한다는 공통점을 지닙니다.\n하지만 똑같은 요청을 2번 보낸다고 가정했을 때 </p>\n<ul>\n<li>POST 2번 보냈을때 -> 2번 생성</li>\n<li>PUT 2번 보냈을 때 -> 1번 생성 1번 수정\n한다는 점에서 차이를 보입니다.</li>\n</ul>","frontmatter":{"title":"[Django] HTTP METHOD","date":"July 11, 2020"}}},"pageContext":{"slug":"/Django/2020-07-11-TIL/","previous":{"fields":{"slug":"/Frontend_log/2020-07-10-TIL/"},"frontmatter":{"title":"[Vue.js] 디렉티브 내용정리","category":"Frontend_log","draft":false}},"next":{"fields":{"slug":"/Django/2020-07-12TIL/"},"frontmatter":{"title":"[Django] collectstatic","category":"Django","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}