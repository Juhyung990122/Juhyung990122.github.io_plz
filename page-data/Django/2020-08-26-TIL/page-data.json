{"componentChunkName":"component---src-templates-blog-post-js","path":"/Django/2020-08-26-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"5a6cf795-bfd7-58bf-8d53-b292e2d1c98e","excerpt":"🌟Django Settings 분리하기 🎯settings.py를 하나로 쓸때의 문제점 기존처럼 settings.py를 하나로 사용하게 되면 개발 시 \nDEBUG값을 true 로 두었다가 배포할때 false로 바꾸어야 하는 번거로움이 있습니다. \n이외에도 환경마다 설정을 일일이 달리해야하는 등의 불편함도 있습니다. 🎯settings.py 왜 분리해서 사용할까요? settings.py…","html":"<h2 id=\"django-settings-분리하기\" style=\"position:relative;\"><a href=\"#django-settings-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"django settings 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟Django Settings 분리하기</h2>\n<h3 id=\"settingspy를-하나로-쓸때의-문제점\" style=\"position:relative;\"><a href=\"#settingspy%EB%A5%BC-%ED%95%98%EB%82%98%EB%A1%9C-%EC%93%B8%EB%95%8C%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"settingspy를 하나로 쓸때의 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯settings.py를 하나로 쓸때의 문제점</h3>\n<p>기존처럼 settings.py를 하나로 사용하게 되면 개발 시\nDEBUG값을 true 로 두었다가 배포할때 false로 바꾸어야 하는 번거로움이 있습니다.\n이외에도 환경마다 설정을 일일이 달리해야하는 등의 불편함도 있습니다.</p>\n<h3 id=\"settingspy-왜-분리해서-사용할까요\" style=\"position:relative;\"><a href=\"#settingspy-%EC%99%9C-%EB%B6%84%EB%A6%AC%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C%EC%9A%94\" aria-label=\"settingspy 왜 분리해서 사용할까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯settings.py 왜 분리해서 사용할까요?</h3>\n<p>settings.py를 분리하게 되면 몇가지 장점들이 있는데 다음과 같습니다.</p>\n<ol>\n<li>기본 환경에 들어있는 디버그 변수를 사용하지 않아도 된다.</li>\n<li>개발할 땐 개발용 세팅을, 배포할땐 배포용 세팅을 따로 분리해두므로 그때그때 변경하지 않아도 된다.</li>\n<li>local환경 버전관리에도 좀더 용이하다.\n결론적으로 얘기하자면 <code class=\"language-text\">환경마다 settings.py 설정 및 적용을 달리할 수 있다는 장점때문에</code>\n실무에서는 주로 settings.py를 분리해서 사용합니다.</li>\n</ol>\n<h3 id=\"settingspy-분리방식\" style=\"position:relative;\"><a href=\"#settingspy-%EB%B6%84%EB%A6%AC%EB%B0%A9%EC%8B%9D\" aria-label=\"settingspy 분리방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯settings.py 분리방식</h3>\n<p>settings.py를 쪼갤때는 <code class=\"language-text\">공개여부</code>에 따라 파일을 분리합니다.\n모든 환경에서 공통적으로 사용되는 공개 설정은 base.py 라는 파일에 작성하고\n환경에 따라 설정을 달리 작성할 때는 local(development).py,production.py를 활용합니다.\n비공개 설정은 대부분 환경변수를 활용합니다. 설정값에 환경변수를 로드하여 공개여부를 설정할 수 있습니다.\n공개적인 설정은 레포지토리에서 저장되지만, 비공개 설정은 gitignore에 반드시 추가하여 관리해야 합니다.</p>\n<h3 id=\"settingspy-분리하기\" style=\"position:relative;\"><a href=\"#settingspy-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"settingspy 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯settings.py 분리하기</h3>\n<ol>\n<li><strong>development.py</strong>\n베이스를 전부 임포트해와서 상속받은 뒤, debug는 true로,\ndatabase는 개발용 임시db(default)로 정의해줍니다.\n이때는 debug가 true이므로 allowed_host엔 자동으로 로컬주소가 입력됩니다.</li>\n<li><strong>production.py</strong>\n베이스를 전부 임포트해와서 상속받은 뒤, debug는 false로, database는 배포용 데이터베이스로 정의해줍니다.\n추가적으로 allowed<em>host에 실제로 런칭할 서비스의 웹사이트 도메인을 추가하여,\n권한을 도용하여 중요기능을 실행시키는 <code class=\"language-text\">CSRF 공격</code>으로부터 웹사이트를 보호합니다.\n이는 debug가 false값일때 활성화되며 allowed</em>host에 도메인이 추가되어있지 않으면\nDisallowedhost가 발생하여 웹사이트가 정상적으로 작동하지 않습니다.</li>\n<li><strong>settings.py</strong>\nbase.py에 있는 <code class=\"language-text\">BASE_DIR은 프로젝트의 root 경로를 저장해두는 변수</code>입니다.\n이 변수를 통해 파일의 경로를 지정하는데, 우리는 기존의 settings.py를 안쪽으로 한번 쪼갰으므로\n기존의 변수에서 os.path.dirname()을 한번 더 추가하여 root 경로를 한단계 더 안쪽으로 설정해줍니다.</li>\n</ol>\n<h3 id=\"분리한-settingspy-적용하기\" style=\"position:relative;\"><a href=\"#%EB%B6%84%EB%A6%AC%ED%95%9C-settingspy-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"분리한 settingspy 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯분리한 settings.py 적용하기</h3>\n<p>각각 나눠진 파일들을 아래의 명령어를 통해 따로따로 적용하여 runserver 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">python3 manage<span class=\"token punctuation\">.</span>py shell <span class=\"token operator\">-</span><span class=\"token operator\">-</span>settings <span class=\"token operator\">=</span> 프로젝트 폴더<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>사용할 파일명\npython3 manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token operator\">-</span><span class=\"token operator\">-</span>settings <span class=\"token operator\">=</span> 프로젝트 폴더<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>사용할 파일명</code></pre></div>\n<p>이외에도 shell을 통해서 환경변수를 지정해주는 방식도 있습니다.</p>\n<p>하지만 두 방법 다 매번 runserver마다 작성해야하므로 쓰기 번거롭습니다.\n이때 <code class=\"language-text\">가상환경 내</code>에 DJANGO<em>SETTINGS</em>MODULE 환경변수를\n등록해두면 —settings 없이도 사용할 수 있게 됩니다.\nshell을 통해 .env 위치로 들어간 뒤, 가상환경을 활성화 하고\n다음 내용을 작성하여 환경변수를 등록해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">DJANGO_SETTINGS_MODULE <span class=\"token operator\">=</span> 프로젝트 폴더<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>사용할 파일명</code></pre></div>\n<h3 id=\"-requirementstxt-분리하기\" style=\"position:relative;\"><a href=\"#-requirementstxt-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\" requirementstxt 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 requirements.txt 분리하기</h3>\n<p>settings.py를 개발용과 배포용으로 나눈김에 requirements.txt도 공통,개발용,배포용으로 나누면\n패키지설치에 필요한 시간과 메모리를 줄일 수 있습니다.\n두 환경 다 <code class=\"language-text\">공통적으로 설치해야하는 것</code>은 <strong>base.txt</strong>에\n<code class=\"language-text\">개발할때만 필요한 패키지</code>는 <strong>development.txt</strong>에\n<code class=\"language-text\">배포할때 필요한 패키지</code>는 <strong>production.txt</strong>에 넣어서 따로따로 설정합니다.</p>\n<p>참고링크<br>\n<a href=\"https://cjh5414.github.io/django-settings-separate/\">https://cjh5414.github.io/django-settings-separate/</a>\n<a href=\"https://wikidocs.net/6606#_5\">https://wikidocs.net/6606#_5</a>\n<a href=\"https://ehfgk78.github.io/2018/02/02/Django-Settings_Requirements/#heading-5-requirementstxt-%EB%B6%84%EB%A6%AC\">https://ehfgk78.github.io/2018/02/02/Django-Settings_Requirements/#heading-5-requirementstxt-%EB%B6%84%EB%A6%AC</a></p>","frontmatter":{"title":"[Django] Settings.py 분리하기","date":"August 26, 2020"}}},"pageContext":{"slug":"/Django/2020-08-26-TIL/","previous":{"fields":{"slug":"/Review_log/review-jcg 복사본/"},"frontmatter":{"title":"[Review]2020 정보처리기사 3회 필기 후기","category":"Review_log","draft":false}},"next":{"fields":{"slug":"/Django/2020-08-29-TIL/"},"frontmatter":{"title":"[Django] CBV 알아보기","category":"Django","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}