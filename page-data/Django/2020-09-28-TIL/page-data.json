{"componentChunkName":"component---src-templates-blog-post-js","path":"/Django/2020-09-28-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b683326f-c6e3-5f7f-8d6a-5e78a8ac592a","excerpt":"🌟 Django에 MYSQL 연동하기 🎯 sqlite3 vs  Postgres vs MYSQL 1.sqlite3\n    간단한 테스트용 디비용도로 사용하기 좋은 데이터베이스 입니다.\n    장점 : 단순하고 간편합니다.\n    단점 : 단일쓰기 작업만 지원하므로 동시에 여러 클라이언트가 \n    데이터베이스에 접근해야할때 제한적이고 구조가 단순한 만큼 기능을 확장하기 어렵습니다.  2. Postgres…","html":"<h2 id=\"-django에-mysql-연동하기\" style=\"position:relative;\"><a href=\"#-django%EC%97%90-mysql-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0\" aria-label=\" django에 mysql 연동하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟 Django에 MYSQL 연동하기</h2>\n<h3 id=\"-sqlite3-vs--postgres-vs-mysql\" style=\"position:relative;\"><a href=\"#-sqlite3-vs--postgres-vs-mysql\" aria-label=\" sqlite3 vs  postgres vs mysql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 sqlite3 vs  Postgres vs MYSQL</h3>\n<p><strong>1.sqlite3</strong>\n간단한 테스트용 디비용도로 사용하기 좋은 데이터베이스 입니다.\n장점 : 단순하고 간편합니다.\n단점 : 단일쓰기 작업만 지원하므로 동시에 여러 클라이언트가\n데이터베이스에 접근해야할때 제한적이고 구조가 단순한 만큼 기능을 확장하기 어렵습니다. </p>\n<p><strong>2. Postgres</strong>\n기본적으로 성능이 좋은 데이터베이스입니다.\n장점 : 안정되어있고 데이터의 무결성을 보장합니다.\n확장성이 좋아 복잡한 기능구현이 가능합니다.\n단점 : 읽기기능이 많은 서비스일 경우 오히려 성능이 떨어질 수 있습니다.</p>\n<p><strong>3. MYSQL</strong>\n가장 보편적이고 무난한 데이터베이스입니다.\n장점 : 간단하고 보편적입니다. 이용자가 많은만큼 지원이 많고 확장성이 좋습니다.\n단점 : 새로 개발된 기능의 경우 안정성이 부족합니다.</p>\n<h3 id=\"-mysql-세팅하기\" style=\"position:relative;\"><a href=\"#-mysql-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0\" aria-label=\" mysql 세팅하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 MYSQL 세팅하기</h3>\n<p><strong>1. Homebrew 설치하기</strong>\nMacOS 전용 패키지 관리자인 Homebrew를 설치합니다.\n<a href=\"https://brew.sh/index_ko%EB%A1%9C\">https://brew.sh/index_ko로</a> 이동하여 나와있는 코드를 복사한 뒤\n터미널을 켜서 붙여넣어줍니다.</p>\n<p><strong>2. mysql 패키지 설치하기</strong>\nHomebrew 설치가 완료되면 다음의 명령어들을 입력해줍니다.\n<code class=\"language-text\"># mysql\n    brew install mysql \n    # mysql-client = 커맨드라인에서 mysql 서버 접속\n    brew install mysql-client \n    # mysql workbench\n    brew install mysqlworkbench 설치</code>\n세개가 다 설치된다면 터미널에 mysql -uroot를 입력해서\nmysql에 잘 접속되는지 확인해줍니다.</p>\n<p><strong>3. mysql 설정하기</strong>\n<code class=\"language-text\">mysql_secure_installation</code>을 입력하여 비밀번호를 설정해줍니다.\n이때 설정하는 비밀번호는 root의 비밀번호가 됩니다.\n옵션들을 상황에 맞춰서 y와 n로 설정해 준 뒤에,\n<code class=\"language-text\">mysql -uroot -p방금 설정한 비밀번호</code>를 터미널에 입력하면\n잘 접속이 되는걸 확인할 수 있습니다.</p>\n<p><strong>4. mysql 내에 DB 생성하기</strong>\nmysql 세팅이 다 끝났으면 mysql로 DB를 생성해줍니다.\n생성명령어는 다음과 같으며, 테이블 이름 뒤에 있는 인자는\n모든 문자형태를 MYSQL에 저장할 수 있게하는 명령어입니다.<br>\n<code class=\"language-text\">create database 테이블이름 character set utf8mb4 collate utf8mb4_general_ci;</code></p>\n<h3 id=\"-django-에-적용하기\" style=\"position:relative;\"><a href=\"#-django-%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\" django 에 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 Django 에 적용하기</h3>\n<p><strong>1. mysqlclient를 설치</strong><br>\n장고에서 사용할 mysqlclient를 설치해줍니다.<br>\n<code class=\"language-text\">bash\n        pip install mysqlclient</code></p>\n<p><strong>2. Settings.py 수정하기</strong><br>\n그 다음 settings.py의 DATABASES를 찾아가보면\n장고의 기본 내장 데이터베이스인 sqlite3으로 설정되어있는걸 확인하실 수 있습니다.\n이 설정을 방금 구성한 MYSQL로 바꿔주면 django에서 쓰는 DB가 바뀌게 됩니다.\n설정양식은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    ```python\n    DATABASES = {\n        &#39;default&#39;: {\n            &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,\n            &#39;NAME&#39; : &#39;테이블이름&#39;,\n            &#39;USER&#39; : &#39;DB사용자이름&#39;,\n            &#39;PASSWORD&#39; : &#39;비밀번호&#39;,\n            &#39;HOST&#39; : &#39;localhost&#39;,\n            &#39;PORT&#39; : &#39;3306&#39;,\n        }\n    }\n    ```</code></pre></div>\n<p><strong>3. DB정보 숨기기</strong>\n이때 데이터베이스의 비밀번호와 같은 정보들은 유출되면 문제가 생기므로 숨겨주어야 합니다.\n이를 위해 프로젝트 내에 secret.json을 만들어주고\n위의 내용을 옮긴 뒤 secret.json은 .gitignore에 추가하여 레포지토리에 올라가지 않도록 설정합니다.\n그 다음 secret.json 내의 DB설정내용을 가져오기 위해서\nsettings.py 에 다음 코드를 삽입해줍니다.\n<code class=\"language-text\">python\n        import secret\n        DATABASES = secret[DATABASES]</code></p>\n<h3 id=\"-db에-테이블-생성하기\" style=\"position:relative;\"><a href=\"#-db%EC%97%90-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\" db에 테이블 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 DB에 테이블 생성하기</h3>\n<p>모든 설정을 마쳤으니 마지막으로 마이그레이션 해서 DB내에 테이블을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```bash\npython3 manage.py makemigrations 앱이름\npython3 manage.py migrate 앱이름\npython3 manage.py migrate \n```</code></pre></div>\n<p>참고 :\n<a href=\"https://velog.io/@devmin/Django-MySQL-Connect\">https://velog.io/@devmin/Django-MySQL-Connect</a>\n<a href=\"https://myjamong.tistory.com/102\">https://myjamong.tistory.com/102</a></p>","frontmatter":{"title":"[Django] Django에 MYSQL 연동하기","date":"September 28, 2020"}}},"pageContext":{"slug":"/Django/2020-09-28-TIL/","previous":{"fields":{"slug":"/Project_log/Uniplogger개발일지1/"},"frontmatter":{"title":"[Uniplogger] 유니플로거 개발일지1","category":"Project_log","draft":false}},"next":{"fields":{"slug":"/Project_log/Uniplogger개발일지6/"},"frontmatter":{"title":"[Uniplogger]유니플로거 개발일지6","category":"Project_log","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}