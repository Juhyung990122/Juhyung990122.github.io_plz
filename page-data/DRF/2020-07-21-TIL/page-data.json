{"componentChunkName":"component---src-templates-blog-post-js","path":"/DRF/2020-07-21-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"ff11ad83-76b2-582b-8d25-57e224eb4b1f","excerpt":"🌟REST API 개념정리 🎯REST란? REST 란 Representational State Transfer 의 약자입니다.\n자원에 인터넷 자원 식별자인 URI 를 부여하여 자원을 정의하고 주소를 지정하는 방법론을 의미합니다. 이렇게 URI를 부여하고 HTTP method를 통해 자원에 접근함으로서 웹의 고유한 특징을 더 잘 이용할 수 있습니다.  🎯REST…","html":"<h2 id=\"rest-api-개념정리\" style=\"position:relative;\"><a href=\"#rest-api-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC\" aria-label=\"rest api 개념정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟REST API 개념정리</h2>\n<h3 id=\"rest란\" style=\"position:relative;\"><a href=\"#rest%EB%9E%80\" aria-label=\"rest란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯REST란?</h3>\n<p>REST 란 Representational State Transfer 의 약자입니다.\n자원에 인터넷 자원 식별자인 URI 를 부여하여 자원을 정의하고 주소를 지정하는 방법론을 의미합니다. 이렇게 URI를 부여하고 HTTP method를 통해 자원에 접근함으로서 웹의 고유한 특징을 더 잘 이용할 수 있습니다. </p>\n<h3 id=\"rest의-특징\" style=\"position:relative;\"><a href=\"#rest%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"rest의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯REST의 특징</h3>\n<ol>\n<li>특정 언어나 플랫폼에 종속되지 않습니다.</li>\n<li>클라이언트와 서버가 분리되어 의존성이 낮습니다.</li>\n<li>상태정보를 저장하지 않습니다.</li>\n<li>자체 표현 구조를 가집니다.</li>\n<li>상태정보를 저장하지않으므로 각 자원은 독립적입니다. 또한 4번의 특징과 같이 자체 표현 구조로 이루어져있습니다. 따라서 캐싱이 가능합니다. </li>\n<li>클라이언트는 API 서버만 호출하므로 구조가 유연합니다.</li>\n</ol>\n<h3 id=\"api란\" style=\"position:relative;\"><a href=\"#api%EB%9E%80\" aria-label=\"api란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯API란?</h3>\n<blockquote>\n<p><em>“API(Application Programming Interface, 응용 프로그램 프로그래밍 인터페이스)는 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스를 뜻한다.”</em> </p>\n</blockquote>\n<p>즉, 간단하게 설명하자면 타 프로그램의 기능이나 데이터 중 끌어쓸 수 있는 것들을 모아두고 이를 사용할 수 있게 돕는 중간자를 의미합니다. 내가 A프로그램의 기능을 B프로그램에서 쓰고싶을 때 상호간의 커뮤니케이션을 하게 해주는 인터페이스라고 생각하면 될 것 같습니다.</p>\n<h3 id=\"rest-api란\" style=\"position:relative;\"><a href=\"#rest-api%EB%9E%80\" aria-label=\"rest api란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯REST API란?</h3>\n<p>REST API란 말그대로 REST 규칙을 따라 설계한 API를 뜻합니다.\nREST 설계 기본규칙은 다음과 같습니다.</p>\n<ol>\n<li>자원에는 고유 URI를 할당합니다. URI를 통해 클라이언트는 자원에 접근할 수 있습니다. </li>\n<li>자원에 대한 요청은 HTTP method를 사용합니다. </li>\n</ol>","frontmatter":{"title":"[DRF] REST API 개념정리","date":"July 21, 2020"}}},"pageContext":{"slug":"/DRF/2020-07-21-TIL/","previous":{"fields":{"slug":"/Frontend_log/2020-07-20-TIL/"},"frontmatter":{"title":"[Vue.js] 컴포넌트 통신","category":"Frontend_log","draft":false}},"next":{"fields":{"slug":"/Frontend_log/2020-07-22-TIL/"},"frontmatter":{"title":"[Vue.js] 생명주기 정리","category":"Frontend_log","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}