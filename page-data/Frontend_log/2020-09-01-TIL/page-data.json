{"componentChunkName":"component---src-templates-blog-post-js","path":"/Frontend_log/2020-09-01-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"06669c13-34e6-52f6-a8e9-346754fe3255","excerpt":"🌟우아한 테크러닝 1회차 🎯Typescript란? https://www.typescriptlang.org/play?#code/Q\n타입스크립트는 javascript의 구문과 의미를 지원하면서 동시에\n정적 유형을 지원하는 오픈소스 프로그래밍 언어입니다. 🎯Typescript 기본정보 타입 추론과 명시\n컴파일러가 10이라는 숫자를 넣으면 숫자인걸 추론할 수 있습니다.\n타입을 명시해주려면 lef foo : 타입명 의 형식으로 명시해줍니다. Type Alias\ntype…","html":"<h2 id=\"우아한-테크러닝-1회차\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EC%95%84%ED%95%9C-%ED%85%8C%ED%81%AC%EB%9F%AC%EB%8B%9D-1%ED%9A%8C%EC%B0%A8\" aria-label=\"우아한 테크러닝 1회차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟우아한 테크러닝 1회차</h2>\n<h3 id=\"typescript란\" style=\"position:relative;\"><a href=\"#typescript%EB%9E%80\" aria-label=\"typescript란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯Typescript란?</h3>\n<p><a href=\"https://www.typescriptlang.org/play?#code/Q\">https://www.typescriptlang.org/play?#code/Q</a>\n타입스크립트는 javascript의 구문과 의미를 지원하면서 동시에\n정적 유형을 지원하는 오픈소스 프로그래밍 언어입니다.</p>\n<h3 id=\"typescript-기본정보\" style=\"position:relative;\"><a href=\"#typescript-%EA%B8%B0%EB%B3%B8%EC%A0%95%EB%B3%B4\" aria-label=\"typescript 기본정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯Typescript 기본정보</h3>\n<ul>\n<li><strong>타입 추론과 명시</strong>\n컴파일러가 10이라는 숫자를 넣으면 숫자인걸 추론할 수 있습니다.\n타입을 명시해주려면 lef foo : 타입명 의 형식으로 명시해줍니다.</li>\n<li><strong>Type Alias</strong>\ntype 의미부여된 이름 = 형식; 으로 타입에 닉네임을 붙여 가독성을 높입니다.\n자바스크립트로 변환시 컴파일타임까지만 작동한 뒤 사라집니다.</li>\n<li>\n<p><strong>type alias와 interface를 이용하여 객체생성</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    type 객체이름 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        요소 <span class=\"token operator\">:</span> 형식<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">interface</span> 객체이름 <span class=\"token punctuation\">{</span>\n        요소 <span class=\"token operator\">:</span> 형식<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> 변수 <span class=\"token operator\">:</span> 객체 <span class=\"token punctuation\">{</span>\n        요소입력<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>둘의 차이는 나중에 다룰 것!</p>\n</li>\n</ul>\n<h3 id=\"react\" style=\"position:relative;\"><a href=\"#react\" aria-label=\"react permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯React</h3>\n<ul>\n<li><strong>React 프로젝트 맨 상단에 항상 React를 import 하는 이유</strong>\n리액트 컴포넌트 패키지를 항상 임포트 시켜야합니다. createlement 메소드를 사용하기 때문입니다.\n우리가 흔히 사용하는 <code class=\"language-text\">&lt;APP/&gt;</code> 은 JSX라는 문법입니다.\n이 엘리먼트는 실제로 React.createElement()를 간단하게 호출하기 위해 쓰입니다.\ncrateElement 메소드가 호출되면 JSX로 들어온 데이터를\n(tagname, props, child)의 형식의 javascript로 변환합니다.</li>\n<li><strong>Reactstrictmode</strong>\n리액트 컴포넌트들중에서 리액트가 판단하기에\n문제점을 가지고 있는 컴포넌트에 대하여 경고를 보내줍니다.\n개발단에서만 작동합니다.</li>\n<li>\n<p><strong>React 기본 컴포넌트 정의방법</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//리액트 컴포넌트</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//reactdom.render 은 최상위에서만 한번 호출(트리형태)</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>StrictMode<span class=\"token operator\">></span> \n    <span class=\"token operator\">&lt;</span>App title<span class=\"token operator\">=</span><span class=\"token string\">\"Tech hello?\"</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"blue\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>StrictMode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">//props에 title이라는 속성 넘겨줘서 app에 넣을 수 있음.</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<p><strong>+) CLI 장단점</strong>\n장점 : 간단하고 앵간한건 다 제공합니다.\n단점 : 제공하지 않는 세팅을 하는게 힘들며 다양한 환경에 대한 대응이 어렵습니다.</p>","frontmatter":{"title":"[우아한 테크러닝] 1회차 정리","date":"September 01, 2020"}}},"pageContext":{"slug":"/Frontend_log/2020-09-01-TIL/","previous":{"fields":{"slug":"/Django/2020-08-29-TIL/"},"frontmatter":{"title":"[Django] CBV 알아보기","category":"Django","draft":false}},"next":{"fields":{"slug":"/Frontend_log/2020-09-03-TIL/"},"frontmatter":{"title":"[우아한 테크러닝] 2회차 정리","category":"Frontend_log","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}